<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://azizunsal.github.io/blog/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 19 Sep 2019 10:39:31 +0300</lastBuildDate>
    
	<atom:link href="https://azizunsal.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Integration Test `@Sql` Annotation</title>
      <link>https://azizunsal.github.io/blog/post/spring-integration-test-sql-annotation/</link>
      <pubDate>Thu, 19 Sep 2019 10:39:31 +0300</pubDate>
      
      <guid>https://azizunsal.github.io/blog/post/spring-integration-test-sql-annotation/</guid>
      <description>&lt;p&gt;The &lt;code&gt;@Sql&lt;/code&gt; annotation is a powerful Spring-specific annotation which you can use while creating integration tests. I&amp;rsquo;ve been using it for quite a while, it&amp;rsquo;s easy to use and powerful.&lt;/p&gt;

&lt;p&gt;Recently I came across a situation in which I had to insert a row into a database table before the integration test performed and of course I used &lt;code&gt;@Sql&lt;/code&gt; annotation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Aptitude Offline Package Management</title>
      <link>https://azizunsal.github.io/blog/post/apt-offline-package-management/</link>
      <pubDate>Sun, 09 Dec 2018 20:08:20 +0300</pubDate>
      
      <guid>https://azizunsal.github.io/blog/post/apt-offline-package-management/</guid>
      <description>&lt;p&gt;Sometimes you need to use a package when there is no internet access. But connecting to the Internet and using the lovely &lt;code&gt;aptitude&lt;/code&gt; are not possible for the server(s) you want to make changes due to network restrictions!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apt-offline&lt;/code&gt; to the rescue. Come with me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Delete Images From Private Docker Registry</title>
      <link>https://azizunsal.github.io/blog/post/delete-images-from-private-docker-registry/</link>
      <pubDate>Sat, 01 Dec 2018 15:31:53 +0300</pubDate>
      
      <guid>https://azizunsal.github.io/blog/post/delete-images-from-private-docker-registry/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s say you configured a private Docker registry for your in-house development workflow and you&amp;rsquo;re using it in your daily development and/or CI/CD workflow intensively.&lt;/p&gt;

&lt;p&gt;When I configured the registry on our server, I use the official Docker &lt;a href=&#34;https://hub.docker.com/_/registry/&#34;&gt;image&lt;/a&gt; and I chose a &lt;a name=&#34;reg-easy-cfg&#34;&gt;quick configuration&lt;/a&gt; after pulling that image.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Run a Playbook Without SSH Password</title>
      <link>https://azizunsal.github.io/blog/post/ansible-ssh-pass/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://azizunsal.github.io/blog/post/ansible-ssh-pass/</guid>
      <description>&lt;p&gt;One of the boring things while working with Ansible is that it prompts each time the hostsâ€™ SSH passwords.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ansible-playbook my-playbook.yml
SSH password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I kept entering passwords a very long time when creating/modifying playbooks.&lt;/p&gt;

&lt;p&gt;Finally, I decided not to enter ssh passwords each time. Its very simple configuration indeed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo v0.19 baseURL Problem</title>
      <link>https://azizunsal.github.io/blog/post/hugo-problem/</link>
      <pubDate>Sat, 18 Mar 2017 21:38:43 +0300</pubDate>
      
      <guid>https://azizunsal.github.io/blog/post/hugo-problem/</guid>
      <description>&lt;p&gt;It is easy to set up a personal blog with a static site generator like &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. But there are a few tricky points when you want to use Hugo with Github Pages.&lt;/p&gt;

&lt;p&gt;I chose the use a single repository for codes and posts. In that approach your site will have a URL that looks like &lt;a href=&#34;https://username.github.io/projectname&#34;&gt;https://username.github.io/projectname&lt;/a&gt;. For more information please go and check the Github Pages &lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>welcome</title>
      <link>https://azizunsal.github.io/blog/post/welcome/</link>
      <pubDate>Sat, 18 Mar 2017 21:38:43 +0300</pubDate>
      
      <guid>https://azizunsal.github.io/blog/post/welcome/</guid>
      <description>Intro Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>